From b52f1264aaf50bc49036eb1fbaec779e49be4c20 Mon Sep 17 00:00:00 2001
From: Vladimir Kryachko <vkryachko@google.com>
Date: Thu, 12 Mar 2020 15:03:55 -0400
Subject: [PATCH] Prototype a lint check for fis.

---
 .../customer-lint-checks.gradle               | 35 +++++++++
 .../firebase/installations/lint/Checks.kt     | 23 ++++++
 .../lint/IncompatibleIidVersionDetector.kt    | 73 +++++++++++++++++++
 .../firebase-installations.gradle             |  3 +
 subprojects.cfg                               |  1 +
 5 files changed, 135 insertions(+)
 create mode 100644 firebase-installations/customer-lint-checks/customer-lint-checks.gradle
 create mode 100644 firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/Checks.kt
 create mode 100644 firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/IncompatibleIidVersionDetector.kt

diff --git a/firebase-installations/customer-lint-checks/customer-lint-checks.gradle b/firebase-installations/customer-lint-checks/customer-lint-checks.gradle
new file mode 100644
index 000000000..d38459c7f
--- /dev/null
+++ b/firebase-installations/customer-lint-checks/customer-lint-checks.gradle
@@ -0,0 +1,35 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+plugins {
+    id 'org.jetbrains.kotlin.jvm'
+}
+
+def lintVersion = '26.4.1'
+
+dependencies {
+    compileOnly "com.android.tools.lint:lint-api:$lintVersion"
+    compileOnly "com.android.tools.lint:lint-checks:$lintVersion"
+
+    testImplementation "junit:junit:4.12"
+    testImplementation "com.android.tools.lint:lint:$lintVersion"
+    testImplementation "com.android.tools.lint:lint-tests:$lintVersion"
+    testImplementation "com.android.tools:testutils:$lintVersion"
+}
+
+jar {
+    manifest {
+        attributes('Lint-Registry-v2': 'com.google.firebase.installations.lint.Checks')
+    }
+}
diff --git a/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/Checks.kt b/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/Checks.kt
new file mode 100644
index 000000000..2f0b117f4
--- /dev/null
+++ b/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/Checks.kt
@@ -0,0 +1,23 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package com.google.firebase.installations.lint
+
+import com.android.tools.lint.client.api.IssueRegistry
+import com.android.tools.lint.detector.api.Issue
+
+class Checks: IssueRegistry() {
+    override val issues: List<Issue>
+        get() = listOf(IncompatibleIidVersionDetector.INCOMPATIBLE_IID_VERSION)
+}
\ No newline at end of file
diff --git a/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/IncompatibleIidVersionDetector.kt b/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/IncompatibleIidVersionDetector.kt
new file mode 100644
index 000000000..d60e89286
--- /dev/null
+++ b/firebase-installations/customer-lint-checks/src/main/java/com/google/firebase/installations/lint/IncompatibleIidVersionDetector.kt
@@ -0,0 +1,73 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package com.google.firebase.installations.lint
+
+import com.android.tools.lint.detector.api.Detector
+
+import com.android.builder.model.MavenCoordinates
+import com.android.tools.lint.detector.api.Category
+import com.android.tools.lint.detector.api.Context
+import com.android.tools.lint.detector.api.Implementation
+import com.android.tools.lint.detector.api.Issue
+import com.android.tools.lint.detector.api.Location
+import com.android.tools.lint.detector.api.Scope
+import com.android.tools.lint.detector.api.Severity
+
+class IncompatibleIidVersionDetector : Detector() {
+    companion object Issues {
+        private val IMPLEMENTATION = Implementation(
+                IncompatibleIidVersionDetector::class.java,
+                Scope.EMPTY
+        )
+
+        @JvmField
+        val INCOMPATIBLE_IID_VERSION = Issue.create(
+                id = "IncompatibleIidVersion",
+                briefDescription = "FirebaseInstanceId version is not compatible with FirebaseInstallations",
+
+                explanation = """
+            Blah-blah-blah, some text for developers.
+            """,
+                category = Category.INTEROPERABILITY,
+                priority = 1,
+                severity = Severity.ERROR,
+                implementation = IMPLEMENTATION
+        )
+    }
+
+    override fun beforeCheckEachProject(context: Context) {
+        if (!context.project.isGradleProject) {
+            return
+        }
+
+        for (variant in context.project.gradleProjectModel.variants) {
+            for (lib in variant.mainArtifact.dependencies.libraries) {
+                val coordinates = lib.resolvedCoordinates
+                if (coordinates.groupId == "com.google.firebase" && coordinates.artifactId == "firebase-iid") {
+                    if (isIncompatibleVersion(coordinates)) {
+                        context.report(INCOMPATIBLE_IID_VERSION,
+                                Location.create(context.file),
+                                "Incompatible IID version found in variant ${variant.name}: ${lib.name}")
+                    }
+                }
+            }
+        }
+    }
+
+    private fun isIncompatibleVersion(coordinates: MavenCoordinates): Boolean {
+        // TODO: implement version check
+        return coordinates.version != "0.0.0"
+    }
+}
\ No newline at end of file
diff --git a/firebase-installations/firebase-installations.gradle b/firebase-installations/firebase-installations.gradle
index 80e03e1cf..d44b7af0a 100644
--- a/firebase-installations/firebase-installations.gradle
+++ b/firebase-installations/firebase-installations.gradle
@@ -49,6 +49,9 @@ dependencies {
     compileOnly "com.google.auto.value:auto-value-annotations:1.6.5"
     annotationProcessor "com.google.auto.value:auto-value:1.6.2"
 
+    // ship the check within the SDK
+    lintPublish project(':firebase-installations:customer-lint-checks')
+
     testImplementation 'androidx.test:core:1.2.0'
     testImplementation 'junit:junit:4.12'
     testImplementation "org.robolectric:robolectric:$robolectricVersion"
diff --git a/subprojects.cfg b/subprojects.cfg
index 531ddce7f..8de84239b 100644
--- a/subprojects.cfg
+++ b/subprojects.cfg
@@ -25,6 +25,7 @@ firebase-inappmessaging-display
 firebase-inappmessaging-display:ktx
 firebase-installations-interop
 firebase-installations
+firebase-installations:customer-lint-checks
 firebase-segmentation
 firebase-storage
 firebase-storage:ktx
